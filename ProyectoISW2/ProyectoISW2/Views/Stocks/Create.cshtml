@model ProyectoISW2.Models.Stock

@{
    ViewBag.Title = "Create";
    var CantidadLapices = ViewBag.CantidadLapicess;
    var LapicesId = ViewBag.LapicesIdd;
    var CantidadPrueba = ViewBag.CantidadPruebass;
    var PruebaId = ViewBag.PruebasIdd;
    var CantidadManual = ViewBag.CantidadManualess;
    var ManualId = ViewBag.manualesIdd;
}
<div class="formcustom form-horizontal">
    <h3>Agregar Stock</h3>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="has-error">@ViewBag.Message</div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="hidden">
                @Html.LabelFor(model => model.LapicesId, "LapicesId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("LapicesId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LapicesId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CantidadLapices, "N° Lapices", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CantidadLapices, new { htmlAttributes = new { @class = "form-control", Value = "0" } })
                    @Html.ValidationMessageFor(model => model.CantidadLapices, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PruebaId, "Prueba", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PruebaId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PruebaId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CantidadPrueba, "N° Pruebas", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CantidadPrueba, new { htmlAttributes = new { @class = "form-control", Value = "0" } })
                    @Html.ValidationMessageFor(model => model.CantidadPrueba, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ManualId, "Manual", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ManualId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ManualId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CantidadManual, "N° Manuales", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CantidadManual, new { htmlAttributes = new { @class = "form-control", Value = "0" } })
                    @Html.ValidationMessageFor(model => model.CantidadManual, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Agregar" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Volver a la lista", "Index")
    </div>
</div>